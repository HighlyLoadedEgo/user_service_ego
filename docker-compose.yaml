version: "3.9"

name: auth-service
services:
  users-database:
    image: postgres:14-alpine
    container_name: users.database
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_DB}
      PGDATA: ${DATABASE_PGDATA}
    ports:
      - 0:${DATABASE_PORT}
    volumes:
      - ${DATABASE_PGDATA}
    env_file:
      - .env
    networks:
      us-net:

  users-postgres-migration:
    container_name: users.migrations
    build:
      context: .
    restart: on-failure
    depends_on:
      users-database:
        condition: service_started
    volumes:
      - ./alembic.ini:/alembic.ini:ro
      - ./src/infrastructure/database/migrations:/src/infrastructure/database/migrations:ro
    command: ["python", "-m", "alembic", "upgrade", "head"]
    env_file:
      - .env
    networks:
      us-net:

  users-fastapi-app:
    container_name: users.app
    build: .
    working_dir: /
    command: ["python", "-O", "-m", "src"]
    ports:
      - ${SITE_PORT}:${SITE_PORT}
    depends_on:
      users-database:
        condition: service_started
    restart: always
    env_file:
      - .env
    networks:
      us-net:

  minio:
    container_name: service.minio
    image: minio/minio
    restart: always
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
      - minio_config:/root/.minio
    env_file:
      - .env
    command: server --address 0.0.0.0:${MINIO_PORT} --console-address :${MINIO_PORT_2} /data
    ports:
        - ${MINIO_HOST}:${MINIO_PORT}:${MINIO_PORT}
        - ${MINIO_PORT_2}:${MINIO_PORT_2}
    networks:
      us-net:

networks:
  us-net:
    driver: bridge

volumes:
  minio_data:
  minio_config:
